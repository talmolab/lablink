name: CI for Lablink Services

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "lablink-client-base/lablink-client-service/**"
      - "lablink-allocator/lablink-allocator-service/**"
      - ".github/workflows/ci.yml"

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    name: Lint - ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - package: lablink-client-service
            python-version: "3.10"
            working-directory: lablink-client-base/lablink-client-service
            ruff-command: "uv run ruff check src tests"
          - package: lablink-allocator-service
            python-version: "3.10"
            working-directory: lablink-allocator/lablink-allocator-service
            ruff-command: "uv run ruff check src tests"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up UV
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: ${{ matrix.working-directory }}
        run: uv sync --all-extras

      - name: Run ruff linter
        working-directory: ${{ matrix.working-directory }}
        run: ${{ matrix.ruff-command }}

  test:
    name: Test - ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - package: lablink-client-service
            python-version: "3.10"
            working-directory: lablink-client-base/lablink-client-service
            test-command: "uv run pytest tests --cov=src/lablink_client_service --cov-report=term-missing:skip-covered --cov-report=xml --cov-report=html"
          - package: lablink-allocator-service
            python-version: "3.10"
            working-directory: lablink-allocator/lablink-allocator-service
            test-command: "uv run pytest tests --maxfail=1 --disable-warnings --cov=. --cov-report=xml --cov-report=term"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up UV
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: ${{ matrix.working-directory }}
        run: |
          uv sync --all-extras

      - name: Run tests
        working-directory: ${{ matrix.working-directory }}
        run: ${{ matrix.test-command }}

  docker-build-test:
    name: Docker Build Test - ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: lablink-allocator
            dockerfile: lablink-allocator/Dockerfile.dev
            context: .
            test-script: |
              docker run --rm lablink-allocator-dev bash -c "source /app/.venv/bin/activate && which lablink-allocator && which generate-init-sql"
          - service: lablink-client
            dockerfile: lablink-client-base/lablink-client-base-image/Dockerfile.dev
            context: lablink-client-base
            test-script: |
              docker run --rm lablink-client-dev bash -c "which check_gpu && which subscribe && which update_inuse_status"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build dev Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ matrix.service }}-dev:test
          push: false
          load: true

      - name: Verify console scripts
        run: ${{ matrix.test-script }}
