#!/bin/bash
PROJECT_ID="vmassign-dev"
USER_NAME="tutorial"
DB_INSTANCE="vmassign-dev"
DB_NAME="users"
DB_TABLE="Users"
UPDATE_COSYNE_VM_REPO="False"
TUTORIAL_REPO_TO_CLONE=""

# Appending start_up_suffix.sh here...
# This is only the suffix of the start_up.sh file
# The prefix and entirety of the script is dynamically generated by create_instances.py.
# The entire script is called start_up.sh

echo "USER_NAME: $USER_NAME"
echo "PROJECT_ID: $PROJECT_ID"
echo "DB_INSTANCE: $DB_INSTANCE"
echo "DB_NAME: $DB_NAME"
echo "DB_TABLE: $DB_TABLE"
echo "UPDATE_COSYNE_VM_REPO: $UPDATE_COSYNE_VM_REPO"
echo "TUTORIAL_REPO_TO_CLONE: $TUTORIAL_REPO_TO_CLONE"
echo

# Clone specified repository if provided
if [ "$TUTORIAL_REPO_TO_CLONE" != "" ]; then
    # Change to the user's Desktop directory
    cd /home/$USER_NAME/Desktop
    echo "Cloning the specified repository..."
    # Clone the repository as the git user so user can git pull if needed
    sudo -u $USER_NAME git clone $TUTORIAL_REPO_TO_CLONE
fi

# Change to the directory where the Python script is located
cd /home/$USER_NAME/cosyne_vm

# Check if the scripts need to be updated
if [ "$UPDATE_COSYNE_VM_REPO" = "True" ]; then
    echo "Updating the cosyne_vm repository..."
    git pull
    /opt/conda/bin/python3 -m pip install -r requirements.txt
fi

# We need to run the Python script with sudo -u $USER_NAME for the CRD command to work
# Listen for messages on pubsub topic hostname (need to use correct Python installation)
sudo -u $USER_NAME /opt/conda/bin/python3 subscribe_instance.py \
    --project_id $PROJECT_ID \
    --db_instance_id $DB_INSTANCE \
    --db_id $DB_NAME \
    --db_table_name $DB_TABLE &

# Update the inuse status of the VM whenever sleap opens/closes
/opt/conda/bin/python3 update_inuse_status.py \
    --project_id $PROJECT_ID \
    --db_instance_id $DB_INSTANCE \
    --db_id $DB_NAME \
    --db_table_name $DB_TABLE &