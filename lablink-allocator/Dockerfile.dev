FROM ghcr.io/astral-sh/uv:python3.11-trixie-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV CONFIG_DIR=/config
ENV CONFIG_NAME=config.yaml
VOLUME [ "/config" ]

# Install dependencies
RUN apt-get update && apt-get install -y \
    postgresql postgresql-contrib \
    rsync \
    openssh-client \
    libpq-dev && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y curl unzip && \
    curl -fsSL https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip -o /tmp/terraform.zip && \
    unzip /tmp/terraform.zip -d /usr/local/bin && \
    rm /tmp/terraform.zip

# Set working directory
WORKDIR /app

# Copy PostgreSQL config
COPY lablink-allocator/lablink-allocator-service/pg_hba.conf /etc/postgresql/15/main/pg_hba.conf

# Copy package files
COPY lablink-allocator/lablink-allocator-service /app/lablink-allocator-service

# Install package with dev dependencies using uv sync
WORKDIR /app/lablink-allocator-service
RUN uv sync --extra dev
# Create symlink so start.sh can find it at /app/.venv
RUN ln -s /app/lablink-allocator-service/.venv /app/.venv
WORKDIR /app



# Expose ports for Flask
EXPOSE 5000

# Copy and set permissions for startup script
COPY lablink-allocator/start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Set the entrypoint script to start the Flask application
CMD ["/bin/bash", "-c", "/app/start.sh"]

